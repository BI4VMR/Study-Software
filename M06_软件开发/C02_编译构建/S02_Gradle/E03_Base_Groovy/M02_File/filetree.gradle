// 调用测试方法
example01()


def example01() {
    // 创建FileTree实例，指定根目录为 `<当前模块>/testFiles/` 。
    def baseDir = "${layout.projectDirectory}${File.separator}testFiles"
    def tree = fileTree(baseDir)
    // 查看匹配到的文件
    tree.each {
        println("${it.path}")
    }
}

def example02() {
    // 设置过滤规则
    def filter = ["10?.log", "**/*Test*"]

    // 创建FileTree实例，指定根目录为 `<当前模块>/testFiles/` 。
    def baseDir = "${layout.projectDirectory}${File.separator}testFiles"
    def tree = fileTree(baseDir) {
        // 保留命中规则的文件
        include filter
    }
    // 查看匹配到的文件
    tree.each {
        println("${it.path}")
    }
}

/**
 * 排除测试目录下的所有Log文件，但要保留 `20250701.log` 。
 */
def example03() {
    def baseDir = "${layout.projectDirectory}${File.separator}testFiles"
    def tree = fileTree(baseDir) {
        include "20250701.log"
        exclude "*.log"
    }
    // 查看匹配到的文件
    tree.each {
        println("${it.path}")
    }
}

/**
 * 排除测试目录下的所有Log文件，但要保留 `20250701.log` 。
 */
def example03_2() {
    def baseDir = "${layout.projectDirectory}${File.separator}testFiles"
    // 分别使用排除和包含规则创建FileTree实例，再将二者合并。
    def tree = fileTree(baseDir) { exclude "*.log" } +
            fileTree(baseDir) { include "20250701.log" }
    // 查看匹配到的文件
    tree.each {
        println("${it.path}")
    }
}
